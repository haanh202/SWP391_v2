<div id="productReviewModal" class="modal">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <h2>Đánh giá sản phẩm</h2>
        <form id="reviewForm">
            <div class="rating">
                <!-- Số sao từ 1 đến 5 -->
                <span data-value="1" class="star">&#9733;</span>
                <span data-value="2" class="star">&#9733;</span>
                <span data-value="3" class="star">&#9733;</span>
                <span data-value="4" class="star">&#9733;</span>
                <span data-value="5" class="star">&#9733;</span>
            </div>
            <input type="hidden" id="ratingValue" value="0" />

            <label for="comment">Nhận xét:</label>
            <textarea id="comment" name="comment" rows="4" cols="50" placeholder="Hãy chia sẻ ý kiến của bạn..."></textarea>
            <br><br>

            <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Modal elements
        const modal = document.getElementById('productReviewModal');
        const reviewButton = document.querySelector('.review'); // Nút mở modal
        const closeBtn = modal.querySelector('.close-btn');

        // Rating elements
        const stars = modal.querySelectorAll('.rating .star');
        const ratingValue = document.getElementById('ratingValue');

        // Open modal
        reviewButton.addEventListener('click', () => {
            modal.style.display = 'block';
        });

        // Close modal
        closeBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        // Close modal when clicking outside
        window.addEventListener('click', (event) => {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Handle star rating
        stars.forEach(star => {
            star.addEventListener('click', () => {
                const value = star.getAttribute('data-value');
                ratingValue.value = value;

                // Highlight the selected stars
                stars.forEach(s => {
                    s.classList.remove('selected');
                    if (s.getAttribute('data-value') <= value) {
                        s.classList.add('selected');
                    }
                });
            });
        });

        // Handle form submission
        const form = document.getElementById('reviewForm');
        form.addEventListener('submit', (event) => {
            event.preventDefault();
            const rating = ratingValue.value;
            const comment = document.getElementById('comment').value;

            if (rating === "0") {
                alert("Vui lòng chọn số sao để đánh giá.");
                return;
            }

            // Log or submit the review
            console.log(`Đánh giá: ${rating} sao, Nhận xét: ${comment}`);

            // Reset form and close modal
            form.reset();
            ratingValue.value = "0";
            stars.forEach(s => s.classList.remove('selected'));
            modal.style.display = 'none';
        });
    });
</script>

<style>
    /* Modal styles */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4); /* Black with opacity */
    }

    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        width: 40%;
        text-align: center;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

    .close-btn {
        float: right;
        font-size: 20px;
        font-weight: bold;
        cursor: pointer;
    }

    /* Rating stars */
    .rating {
        font-size: 24px;
        margin: 10px 0;
        cursor: pointer;
        display: inline-block;
    }

        .rating .star {
            color: #ccc; /* Default color for unselected stars */
            transition: color 0.2s;
        }

            .rating .star.selected {
                color: #ffcc00; /* Highlighted color for selected stars */
            }

            

    /* Buttons */
    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>
