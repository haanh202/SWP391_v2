<div id="productReviewModal" class="modal">
	<div class="modal-content">
		<span class="close-btn">&times;</span>
		<h2>Rate Product</h2>

		<form id="reviewForm" asp-action="SubmitReview" asp-controller="RatingAndReview" method="POST">
			@* <!-- Input hidden để lưu ProductId --> *@
			<p><strong>Product:</strong> <span id="productName"></span></p>
			
			<div class="rating" name="rating">
				<!-- Số sao từ 1 đến 5 -->
				<span data-value="1" class="star" style="margin-top: 0px">&#9733;</span>
				<span data-value="2" class="star" style="margin-top: 0px">&#9733;</span>
				<span data-value="3" class="star" style="margin-top: 0px">&#9733;</span>
				<span data-value="4" class="star" style="margin-top: 0px">&#9733;</span>
				<span data-value="5" class="star" style="margin-top: 0px">&#9733;</span>
			</div>

			
			<input type="hidden" name="productId" value="" />
			<input type="hidden" id="ratingValue" name="rating" value="0" />

			<textarea id="comment" name="review" rows="6" cols="30" placeholder="Share more thoughts on the product to help other buyers..."></textarea>
			<br><br>

			<button type="submit" class="btn btn-primary">SUBMIT</button>
		</form>
	</div>
</div>

<script>
		document.addEventListener('DOMContentLoaded', () => {
		// Lấy các phần tử cần thiết
		const modal = document.getElementById('productReviewModal');
		const reviewButtons = document.querySelectorAll('.review'); // Nút mở modal
		const closeBtn = modal.querySelector('.close-btn'); // Nút đóng modal
		const productIdInput = modal.querySelector('input[name="productId"]'); // Input hidden ProductId
		const productNameDisplay = modal.querySelector('#productName'); // Hiển thị tên sản phẩm
		const stars = modal.querySelectorAll('.rating .star'); // Các ngôi sao
		const ratingValue = document.getElementById('ratingValue'); // Giá trị sao
		const form = document.getElementById('reviewForm'); // Form đánh giá

		// Mở modal và cập nhật ProductId, ProductName
		reviewButtons.forEach(button => {
			button.addEventListener('click', () => {
				const productId = button.getAttribute('data-product-id'); // Lấy ProductId
				const productName = button.getAttribute('data-product-name'); // Lấy ProductName

				productIdInput.value = productId; // Gán ProductId vào input ẩn
				productNameDisplay.textContent = productName; // Hiển thị tên sản phẩm trong modal
				modal.style.display = 'block'; // Hiển thị modal
			});
		});

		// Đóng modal khi nhấn nút close
		closeBtn.addEventListener('click', () => {
			modal.style.display = 'none';
		});

		// Đóng modal khi nhấn ra ngoài
		window.addEventListener('click', (event) => {
			if (event.target === modal) {
				modal.style.display = 'none';
			}
		});

		// Xử lý chọn số sao
		stars.forEach(star => {
			star.addEventListener('click', () => {
				const value = star.getAttribute('data-value'); // Lấy giá trị sao
				ratingValue.value = value; // Gán giá trị sao vào input ẩn

				// Cập nhật màu các sao
				stars.forEach(s => {
					s.classList.remove('selected');
					if (s.getAttribute('data-value') <= value) {
						s.classList.add('selected');
					}
				});
			});
		});

		// Xử lý gửi form
		form.addEventListener('submit', (event) => {
			event.preventDefault(); // Ngăn form gửi mặc định

			const rating = ratingValue.value;
			const comment = document.getElementById('comment').value;

			if (rating === "0") {
				alert("Vui lòng chọn số sao để đánh giá.");
				return;
			}

			// Gửi dữ liệu qua AJAX
			const data = new FormData(form);
			fetch(form.getAttribute('action'), {
				method: 'POST',
				body: data,
			})
			.then(response => response.json())
			.then(result => {
				console.log('Gửi đánh giá thành công:', result);
				alert('Cảm ơn bạn đã đánh giá sản phẩm!');
				modal.style.display = 'none'; // Đóng modal sau khi gửi thành công
				form.reset(); // Reset form
				ratingValue.value = "0"; // Reset giá trị sao
				stars.forEach(s => s.classList.remove('selected')); // Reset trạng thái sao
			})
			.catch(error => {
				console.error('Lỗi khi gửi đánh giá:', error);
				alert('Đã xảy ra lỗi. Vui lòng thử lại!');
			});
		});
	});

</script>


<style>
	/* Modal styles */
	.modal {
		display: none; /* Hidden by default */
		position: fixed;
		z-index: 1000;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		overflow: auto;
		background-color: rgba(0, 0, 0, 0.4); /* Black with opacity */
	}

	.modal-content {
		background-color: #fff;
		margin: 15% auto;
		padding: 20px;
		border-radius: 8px;
		width: 40%;
		text-align: center;
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
	}

	.close-btn {
		float: right;
		font-size: 20px;
		font-weight: bold;
		cursor: pointer;
	}

	/* Rating stars */
	.rating {
		font-size: 50px;
		margin-bottom: 10px;
		cursor: pointer;
		display: inline-block;
	}

		.rating .star {
			color: #ccc; /* Default color for unselected stars */
			transition: color 0.2s;
		}

			.rating .star.selected {
				color: #ffcc00; /* Highlighted color for selected stars */
			}



	/* Buttons */
	.btn-primary {
		background-color: #007bff;
		color: white;
		border: none;
		padding: 10px 20px;
		cursor: pointer;
	}

		.btn-primary:hover {
			background-color: #0056b3;
		}
</style>
